{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var initialState={isAuthenticated:false,user:null,isAdmin:false,token:''};var authSlice=createSlice({name:'auth',initialState:initialState,reducers:{login:function login(state,action){var user=action.payload.user;state.user=user;state.token=action.payload.token;state.isAuthenticated=true;if(user.role==='admin'){state.isAdmin=true;}},register:function register(state,action){var user=action.payload.user;state.user=user;state.token=action.payload.token;state.isAuthenticated=true;state.isAdmin=false;},logout:function logout(state){// state = initialState;\nObject.assign(state,initialState);}}});export var authActions=authSlice.actions;export default authSlice;","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/node/lennitaFront/LennitaBB/src/store/auth-slice.js"],"names":["createSlice","initialState","isAuthenticated","user","isAdmin","token","authSlice","name","reducers","login","state","action","payload","role","register","logout","Object","assign","authActions","actions"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAGA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,eAAe,CAAE,KADA,CAEjBC,IAAI,CAAE,IAFW,CAGjBC,OAAO,CAAE,KAHQ,CAIjBC,KAAK,CAAE,EAJU,CAArB,CAOA,GAAMC,CAAAA,SAAS,CAAGN,WAAW,CAAC,CAC1BO,IAAI,CAAE,MADoB,CAE1BN,YAAY,CAAZA,YAF0B,CAG1BO,QAAQ,CAAE,CACNC,KADM,gBACAC,KADA,CACOC,MADP,CACe,CACjB,GAAMR,CAAAA,IAAI,CAAGQ,MAAM,CAACC,OAAP,CAAeT,IAA5B,CACAO,KAAK,CAACP,IAAN,CAAaA,IAAb,CACAO,KAAK,CAACL,KAAN,CAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B,CACAK,KAAK,CAACR,eAAN,CAAwB,IAAxB,CACA,GAAIC,IAAI,CAACU,IAAL,GAAc,OAAlB,CAA2B,CACvBH,KAAK,CAACN,OAAN,CAAgB,IAAhB,CACH,CACJ,CATK,CAUNU,QAVM,mBAUGJ,KAVH,CAUUC,MAVV,CAUkB,CACpB,GAAMR,CAAAA,IAAI,CAAGQ,MAAM,CAACC,OAAP,CAAeT,IAA5B,CACAO,KAAK,CAACP,IAAN,CAAaA,IAAb,CACAO,KAAK,CAACL,KAAN,CAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B,CACAK,KAAK,CAACR,eAAN,CAAwB,IAAxB,CACAQ,KAAK,CAACN,OAAN,CAAgB,KAAhB,CACH,CAhBK,CAiBNW,MAjBM,iBAiBCL,KAjBD,CAiBQ,CACV;AACAM,MAAM,CAACC,MAAP,CAAcP,KAAd,CAAqBT,YAArB,EACH,CApBK,CAHgB,CAAD,CAA7B,CA6BA,MAAO,IAAMiB,CAAAA,WAAW,CAAGZ,SAAS,CAACa,OAA9B,CAEP,cAAeb,CAAAA,SAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    isAdmin: false,\r\n    token: ''\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        login(state, action) {\r\n            const user = action.payload.user;\r\n            state.user = user;\r\n            state.token = action.payload.token;\r\n            state.isAuthenticated = true\r\n            if (user.role === 'admin') {\r\n                state.isAdmin = true\r\n            }\r\n        },\r\n        register(state, action) {\r\n            const user = action.payload.user;\r\n            state.user = user;\r\n            state.token = action.payload.token;\r\n            state.isAuthenticated = true;\r\n            state.isAdmin = false;\r\n        },\r\n        logout(state) {\r\n            // state = initialState;\r\n            Object.assign(state, initialState);\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authSlice;"]},"metadata":{},"sourceType":"module"}