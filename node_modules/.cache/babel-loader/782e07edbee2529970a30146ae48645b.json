{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import cartSlice from'./cart-slice';import productsSlice from'./products-slice';import authSlice from'./auth-slice';import uiSlice from'./ui-slice';import{persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';import storage from'redux-persist/lib/storage';var cartPersistConfig={key:'cart',version:1,storage:storage};var authPersistConfig={key:'auth',version:1,storage:storage};var cartReducer=persistReducer(cartPersistConfig,cartSlice.reducer);var authReducer=persistReducer(authPersistConfig,authSlice.reducer);var store=configureStore({reducer:{cart:cartReducer,products:productsSlice.reducer,auth:authReducer,ui:uiSlice.reducer},middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}// serializableCheck: false\n});}});export default store;","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/node/lennitaFront/LennitaBB/src/store/index.js"],"names":["configureStore","cartSlice","productsSlice","authSlice","uiSlice","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","cartPersistConfig","key","version","authPersistConfig","cartReducer","reducer","authReducer","store","cart","products","auth","ui","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CAEA,OACIC,cADJ,CAEIC,KAFJ,CAGIC,SAHJ,CAIIC,KAJJ,CAKIC,OALJ,CAMIC,KANJ,CAOIC,QAPJ,KAQS,eART,CASE,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,CACxBC,GAAG,CAAE,MADmB,CAExBC,OAAO,CAAE,CAFe,CAGxBH,OAAO,CAAPA,OAHwB,CAA1B,CAMA,GAAMI,CAAAA,iBAAiB,CAAG,CACxBF,GAAG,CAAE,MADmB,CAExBC,OAAO,CAAE,CAFe,CAGxBH,OAAO,CAAPA,OAHwB,CAA1B,CAMA,GAAMK,CAAAA,WAAW,CAAGZ,cAAc,CAACQ,iBAAD,CAAoBZ,SAAS,CAACiB,OAA9B,CAAlC,CACA,GAAMC,CAAAA,WAAW,CAAGd,cAAc,CAACW,iBAAD,CAAoBb,SAAS,CAACe,OAA9B,CAAlC,CAIF,GAAME,CAAAA,KAAK,CAAGpB,cAAc,CAAC,CACzBkB,OAAO,CAAE,CACLG,IAAI,CAAEJ,WADD,CAELK,QAAQ,CAAEpB,aAAa,CAACgB,OAFnB,CAGLK,IAAI,CAAEJ,WAHD,CAILK,EAAE,CAAEpB,OAAO,CAACc,OAJP,CADgB,CAOzBO,UAAU,CAAE,oBAACC,oBAAD,QACRA,CAAAA,oBAAoB,CAAC,CACjBC,iBAAiB,CAAE,CACfC,cAAc,CAAE,CAACtB,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADD,CAGnB;AAJiB,CAAD,CADZ,EAPa,CAAD,CAA5B,CAiBA,cAAeS,CAAAA,KAAf","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport cartSlice from './cart-slice';\r\nimport productsSlice from './products-slice';\r\nimport authSlice from './auth-slice';\r\nimport uiSlice from './ui-slice';\r\n\r\nimport {\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist';\r\n  import storage from 'redux-persist/lib/storage';\r\n\r\n  const cartPersistConfig = {\r\n    key: 'cart',\r\n    version: 1,\r\n    storage,\r\n  };\r\n\r\n  const authPersistConfig = {\r\n    key: 'auth',\r\n    version: 1,\r\n    storage,\r\n  }\r\n\r\n  const cartReducer = persistReducer(cartPersistConfig, cartSlice.reducer);\r\n  const authReducer = persistReducer(authPersistConfig, authSlice.reducer);\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        cart: cartReducer,\r\n        products: productsSlice.reducer,\r\n        auth: authReducer,\r\n        ui: uiSlice.reducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n            // serializableCheck: false\r\n        }),\r\n});\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}