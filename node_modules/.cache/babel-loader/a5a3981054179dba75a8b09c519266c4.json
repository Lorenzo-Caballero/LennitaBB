{"ast":null,"code":"import _objectSpread from\"C:/Users/Lenovo/Documents/node/lennitaFront/LennitaBB/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/Lenovo/Documents/node/lennitaFront/LennitaBB/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from'@reduxjs/toolkit';var initialState={products:[],filteredProducts:[],productDetails:[],totalProducts:0,minPrice:0,maxPrice:0,sort:'price-lowest',filters:{search:'',category:'all',company:'all',price:0,shipping:false}};var productsSlice=createSlice({name:'products',initialState:initialState,reducers:{replaceProducts:function replaceProducts(state,action){state.products=action.payload;state.filteredProducts=action.payload;state.totalProducts=action.payload.length;// set min and max prices\nvar prices=state.products.map(function(product){return product.price;});state.maxPrice=Math.max.apply(Math,_toConsumableArray(prices));state.minPrice=Math.min.apply(Math,_toConsumableArray(prices));state.filters.price=Math.max.apply(Math,_toConsumableArray(prices));},setFilters:function setFilters(state,action){state.filters=action.payload;},sortProducts:function sortProducts(state,action){var value=action.payload;var tempProducts=[];if(value==='price-lowest'){tempProducts=state.filteredProducts.sort(function(a,b){return a.price-b.price;});}if(value==='price-highest'){tempProducts=state.filteredProducts.sort(function(a,b){return b.price-a.price;});}if(value==='name-a'){tempProducts=state.filteredProducts.sort(function(a,b){return a.name.localeCompare(b.name);});}if(value==='name-z'){tempProducts=state.filteredProducts.sort(function(a,b){return b.name.localeCompare(a.name);});}state.filteredProducts=tempProducts;state.sort=value;},filterProducts:function filterProducts(state,action){var _action$payload=action.payload,search=_action$payload.search,category=_action$payload.category,company=_action$payload.company,price=_action$payload.price,shipping=_action$payload.shipping;var tempProducts=state.products;if(search){tempProducts=tempProducts.filter(function(product){return product.name.toLowerCase().includes(search);});}if(category!=='all'){tempProducts=tempProducts.filter(function(product){return product.category===category;});}if(company!=='all'){tempProducts=tempProducts.filter(function(product){return product.brand===company;});}if(shipping){tempProducts=tempProducts.filter(function(product){return product.shipping===1;});}tempProducts=tempProducts.filter(function(product){return product.price<=price;});state.filteredProducts=tempProducts;state.totalProducts=tempProducts.length;},clearFilter:function clearFilter(state,action){// state.filteredProducts = state.products;\n// state.totalProducts = state.products.length;\nstate.filters=_objectSpread(_objectSpread({},state.filters),{},{search:'',category:'all',company:'all',price:state.maxPrice,shipping:false});},setProductDetails:function setProductDetails(state,action){state.productDetails=action.payload;}// addProduct: (state, action) => {\n//     const product = action.payload;\n//     state.products.unshift(product);\n// }\n}});export var productsActions=productsSlice.actions;export default productsSlice;","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/node/lennitaFront/LennitaBB/src/store/products-slice.js"],"names":["createSlice","initialState","products","filteredProducts","productDetails","totalProducts","minPrice","maxPrice","sort","filters","search","category","company","price","shipping","productsSlice","name","reducers","replaceProducts","state","action","payload","length","prices","map","product","Math","max","min","setFilters","sortProducts","value","tempProducts","a","b","localeCompare","filterProducts","filter","toLowerCase","includes","brand","clearFilter","setProductDetails","productsActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = {\r\n    products: [],\r\n    filteredProducts: [],\r\n    productDetails: [],\r\n    totalProducts: 0,\r\n    minPrice: 0,\r\n    maxPrice: 0,\r\n    sort: 'price-lowest',\r\n    filters: {\r\n        search: '',\r\n        category: 'all',\r\n        company: 'all',\r\n        price: 0,\r\n        shipping: false\r\n    }\r\n};\r\n\r\n\r\nconst productsSlice = createSlice({\r\n    name: 'products',\r\n    initialState,\r\n    reducers: {\r\n        replaceProducts: (state, action) => {\r\n            state.products = action.payload;\r\n            state.filteredProducts = action.payload;\r\n            state.totalProducts = action.payload.length;\r\n            // set min and max prices\r\n            let prices = state.products.map((product) => product.price);\r\n            state.maxPrice = Math.max(...prices);\r\n            state.minPrice = Math.min(...prices);\r\n            state.filters.price = Math.max(...prices);\r\n        },\r\n        setFilters: (state, action) => {\r\n            state.filters = action.payload;\r\n        },\r\n        sortProducts: (state, action) => {\r\n            const value = action.payload;\r\n            let tempProducts = [];\r\n            if (value === 'price-lowest') {\r\n                tempProducts = state.filteredProducts.sort((a, b) => {\r\n                    return a.price - b.price;\r\n                })\r\n            }\r\n            if (value === 'price-highest') {\r\n                tempProducts = state.filteredProducts.sort((a, b) => {\r\n                    return b.price - a.price;\r\n                })\r\n            }\r\n            if (value === 'name-a') {\r\n                tempProducts = state.filteredProducts.sort((a, b) => {\r\n                    return a.name.localeCompare(b.name);\r\n                })\r\n            }\r\n            if (value === 'name-z') {\r\n                tempProducts = state.filteredProducts.sort((a, b) => {\r\n                    return b.name.localeCompare(a.name);\r\n                })\r\n            }\r\n            state.filteredProducts = tempProducts;\r\n            state.sort = value;\r\n        },\r\n        filterProducts: (state, action) => {\r\n            const { search, category, company, price, shipping } = action.payload;\r\n            let tempProducts = state.products;\r\n            if (search) {\r\n                tempProducts = tempProducts.filter((product) => \r\n                    product.name.toLowerCase().includes(search)\r\n                );\r\n            }\r\n            if (category !== 'all') {\r\n                tempProducts = tempProducts.filter(\r\n                    (product) => product.category === category\r\n                )\r\n            }\r\n            if (company !== 'all') {\r\n                tempProducts = tempProducts.filter(\r\n                    (product) => product.brand === company\r\n                )\r\n            }\r\n            if (shipping) {\r\n                tempProducts = tempProducts.filter(\r\n                    (product) => product.shipping === 1\r\n                )\r\n            }\r\n            tempProducts = tempProducts.filter(\r\n                (product) => product.price <= price\r\n            )\r\n            state.filteredProducts = tempProducts;\r\n            state.totalProducts = tempProducts.length;\r\n        },\r\n        clearFilter: (state, action) => {\r\n            // state.filteredProducts = state.products;\r\n            // state.totalProducts = state.products.length;\r\n            state.filters = {\r\n                ...state.filters,\r\n                search: '',\r\n                category: 'all',\r\n                company: 'all',\r\n                price: state.maxPrice,\r\n                shipping: false\r\n            }\r\n        },\r\n        setProductDetails: (state, action) => {\r\n            state.productDetails = action.payload;\r\n        },\r\n        // addProduct: (state, action) => {\r\n        //     const product = action.payload;\r\n        //     state.products.unshift(product);\r\n        // }\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const productsActions = productsSlice.actions;\r\n\r\nexport default productsSlice;"]},"metadata":{},"sourceType":"module"}